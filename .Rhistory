summary(FO1)
ProxSums <- runif(10, min = 1, max = cl)
ProxSums
ProxSumsInv <- 1 / ProxSums
ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
FO1
summary(FO1)
ProxSums <- runif(10, min = 1, max = cl)
ProxSums
ProxSumsInv <- 1 / ProxSums
ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
FO1
summary(FO1)
ProxSums <- runif(10, min = 1, max = cl)
ProxSums
ProxSumsInv <- 1 / ProxSums
ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
FO1
summary(FO1)
ProxSums <- runif(10, min = 1, max = cl)
ProxSums
ProxSumsInv <- 1 / ProxSums
ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
FO1
summary(FO1)
ProxSums <- runif(10, min = 1, max = cl)
ProxSums
ProxSumsInv <- 1 / ProxSums
ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
FO1
summary(FO1)
ProxSums <- runif(10, min = 1, max = cl)
ProxSums
ProxSumsInv <- 1 / ProxSums
ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
FO1
summary(FO1)
ProxSums <- runif(10, min = 1, max = cl)
ProxSums
ProxSumsInv <- 1 / ProxSums
ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
FO1
summary(FO1)
hist(FO1)
ProxSums <- runif(10, min = 1, max = cl)
ProxSums
ProxSumsInv <- 1 / ProxSums
ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
FO1
summary(FO1)
hist(FO1)
ProxSums <- runif(10, min = 1, max = cl)
ProxSums
ProxSumsInv <- 1 / ProxSums
ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
FO1
summary(FO1)
hist(FO1)
ProxSums <- runif(10, min = 1, max = cl)
ProxSums
ProxSumsInv <- 1 / ProxSums
ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
FO1
summary(FO1)
hist(FO1)
ProxSums <- runif(10, min = 1, max = cl)
ProxSums
ProxSumsInv <- 1 / ProxSums
ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
FO1
summary(FO1)
hist(FO1)
cl <- 1000
# x <- runif(cl)
ProxSums <- runif(10, min = 1, max = cl)
ProxSums
ProxSumsInv <- 1 / ProxSums
ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
FO1
summary(FO1)
hist(FO1)
cl <- 1000
# x <- runif(cl)
ProxSums <- runif(10, min = 1, max = cl)
ProxSums
ProxSumsInv <- 1 / ProxSums
ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
FO1
summary(FO1)
hist(FO1)
cl <- 1000
# x <- runif(cl)
ProxSums <- runif(10, min = 1, max = cl)
ProxSums
ProxSumsInv <- 1 / ProxSums
ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
FO1
summary(FO1)
hist(FO1)
cl <- 1000
# x <- runif(cl)
ProxSums <- runif(10, min = 1, max = cl)
ProxSums
ProxSumsInv <- 1 / ProxSums
ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
FO1
summary(FO1)
hist(FO1)
cl <- 1000
# x <- runif(cl)
ProxSums <- runif(10, min = 1, max = cl)
ProxSums
ProxSumsInv <- 1 / ProxSums
ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
FO1
summary(FO1)
hist(FO1)
cl <- 1000
# x <- runif(cl)
ProxSums <- runif(cl, min = 1, max = cl)
ProxSums
ProxSumsInv <- 1 / ProxSums
ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
FO1
summary(FO1)
hist(FO1)
cl <- 1000
# x <- runif(cl)
ProxSums <- runif(cl, min = 1, max = cl)
ProxSums
ProxSumsInv <- 1 / ProxSums
ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
FO1
summary(FO1)
hist(FO1)
cl <- 1000
# x <- runif(cl)
ProxSums <- runif(cl, min = 1, max = cl)
ProxSums
ProxSumsInv <- 1 / ProxSums
ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
FO1
summary(FO1)
hist(FO1)
cl <- 1000
# x <- runif(cl)
ProxSums <- runif(cl, min = 1, max = cl)
ProxSums
ProxSumsInv <- 1 / ProxSums
ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
FO1
summary(FO1)
hist(FO1)
cl <- 1000
# x <- runif(cl)
ProxSums <- runif(cl, min = 1, max = cl)
ProxSums
ProxSumsInv <- 1 / ProxSums
ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
FO1
summary(FO1)
hist(FO1)
cl <- 1000
# x <- runif(cl)
ProxSums <- runif(cl, min = 1, max = cl)
ProxSums
ProxSumsInv <- 1 / ProxSums
ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
FO1
summary(FO1)
hist(FO1)
cl <- 1000
# x <- runif(cl)
ProxSums <- runif(cl, min = 1, max = cl)
ProxSums
ProxSumsInv <- 1 / ProxSums
ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
FO1
summary(FO1)
hist(FO1)
cl <- 1000
# x <- runif(cl)
ProxSums <- runif(cl, min = 1, max = cl)
# ProxSums
ProxSumsInv <- 1 / ProxSums
# ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
# FO1
# summary(FO1)
hist(FO1)
cl <- 1000
# x <- runif(cl)
ProxSums <- runif(cl, min = 1, max = cl)
# ProxSums
ProxSumsInv <- 1 / ProxSums
# ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
# FO1
# summary(FO1)
hist(FO1)
cl <- 1000
# x <- runif(cl)
ProxSums <- runif(cl, min = 1, max = cl)
# ProxSums
ProxSumsInv <- 1 / ProxSums
# ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
# FO1
# summary(FO1)
hist(FO1)
cl <- 1000
# x <- runif(cl)
ProxSums <- runif(cl, min = 1, max = cl)
# ProxSums
ProxSumsInv <- 1 / ProxSums
# ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
# FO1
# summary(FO1)
hist(FO1)
cl <- 1000
# x <- runif(cl)
ProxSums <- runif(cl, min = 1, max = cl)
# ProxSums
ProxSumsInv <- 1 / ProxSums
# ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
# FO1
summary(FO1)
hist(FO1)
cl <- 1000
# x <- runif(cl)
ProxSums <- runif(cl, min = 1, max = cl)
# ProxSums
ProxSumsInv <- 1 / ProxSums
# ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
# FO1
summary(FO1)
hist(FO1)
cl <- 1000
# x <- runif(cl)
ProxSums <- runif(cl, min = 1, max = cl)
# ProxSums
ProxSumsInv <- 1 / ProxSums
# ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
# FO1
summary(FO1)
hist(FO1)
cl <- 1000
# x <- runif(cl)
ProxSums <- runif(cl, min = 1, max = cl)
# ProxSums
ProxSumsInv <- 1 / ProxSums
# ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
# FO1
summary(FO1)
hist(FO1)
ProxSums <- rep(1, 10)
ProxSumsInv <- 1 / ProxSums
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
# FO1
summary(FO1)
hist(FO1)
ProxSums
ProxSumsInv <- 1 / ProxSums
med <- median(ProxSumsInv)
med
ProxSums <- rep(0.1, 10)
ProxSumsInv <- 1 / ProxSums
ProxSumsInv
ProxSums <- rep(10, 10)
ProxSumsInv <- 1 / ProxSums
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
summary(FO1)
hist(FO1)
FO1
med
ProxSums <- rep(9, 10)
ProxSumsInv <- 1 / ProxSums
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
summary(FO1)
med
FO1
cl <- 100
ProxSums <- runif(cl, min = 1, max = cl)
ProxSumsInv <- 1 / ProxSums
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
summary(FO1)
hist(FO1)
ProxSums <- runif(cl, min = 1, max = cl)
# ProxSums <- rep(9, 10)
# ProxSums
ProxSumsInv <- 1 / ProxSums
# ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
# FO1
summary(FO1)
hist(FO1)
ProxSums <- runif(cl, min = 1, max = cl)
# ProxSums <- rep(9, 10)
# ProxSums
ProxSumsInv <- 1 / ProxSums
# ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
# FO1
summary(FO1)
hist(FO1)
ProxSums <- runif(cl, min = 1, max = cl)
# ProxSums <- rep(9, 10)
# ProxSums
ProxSumsInv <- 1 / ProxSums
# ProxSumsInv
med <- median(ProxSumsInv)
FO1 <- (ProxSumsInv - med) / mean(abs(ProxSumsInv - med))
# FO1
summary(FO1)
hist(FO1)
package(sna)
library(sna)
install.packages("sna")
library(sna)
rgraph(10)
sample(24)
setwd("~/DataScienceProjects/course05/RepData_PeerAssessment1")
dat <- read.csv("activity.csv")
View(dat)
activity <- read.csv("activity.csv")
tapply(activity$steps, activity$date, sum)
total_steps_per_day <- tapply(activity$steps, activity$date, sum)
hist(total_steps_per_day, xlab = "Number of steps per day", main = "Total number of steps taken each day")
mean(total_steps_per_day)
median(total_steps_per_day)
total_steps_per_day
25 + NA
total_steps_per_day <- tapply(activity$steps, activity$date, sum, na.rm = TRUE)
total_steps_per_day
hist(total_steps_per_day, xlab = "Number of steps per day", main = "Total number of steps taken each day")
average_daily_activity_pattern <- tapply(activity$steps, activity$interval, mean, na.rm = TRUE)
average_daily_activity_pattern
plot(average_daily_activity_pattern, type = "l")
plot(average_daily_activity_pattern, y = names(average_daily_activity_pattern), type = "l", xlab = "interval")
plot(x = average_daily_activity_pattern, y = names(average_daily_activity_pattern), type = "l", xlab = "interval")
plot(x = names(average_daily_activity_pattern), y = average_daily_activity_pattern, type = "l", xlab = "interval")
which.max(average_daily_activity_pattern)
max(average_daily_activity_pattern)
names(average_daily_activity_pattern)[which.max(average_daily_activity_pattern)]
sum(is.na(activity$steps))
summary(activity)
activity2 <- activity
intervals <- sort(unique(activity$interval))
intervals
head(activity)
intervals <- sort(unique(activity$interval))
average_daily_activity_pattern <- sapply(intervals, function(x) mean(activity[activity$interval == x, "steps"], na.rm = T))
intervals <- sort(unique(activity$interval))
average_daily_activity_pattern <- sapply(intervals, function(x) mean(activity[activity$interval == x, "steps"], na.rm = T))
plot(x = intervals, y = average_daily_activity_pattern, type = "l", xlab = "interval", ylab = "average number of steps", main = "Average daily activity pattern")
intervals[which.max(average_daily_activity_pattern)]
indices_of_missing_values <- which(is.na(activity2))
indices_of_missing_values <- which(is.na(activity2$steps))
indices_of_missing_values
activity2[indices_of_missing_values, "interval"]
match(activity2[indices_of_missing_values, "interval"], intervals)
average_daily_activity_pattern[match(activity2[indices_of_missing_values, "interval"], intervals)]
activity$date <- as.POSIXlt(activity$date)
head(activity)
activity$date[1:6]
activity$date[1:6]$wday
weekdays(weekdays())
weekdays(activity$date[1:6])
weekdays(activity$date[1:6], T)
Sys.setlocale("LC_TIME", "English")
weekdays(activity$date[1:6], T)
weekdays(activity$date, T)
point_in_week <- ifelse(weekdays(activity$date, T) %in% c("Sat", "Sun"), "weekend", "weekday")
point_in_week
table(weekdays(activity$date, T), point_in_week)
library(lattice)
Sys.setlocale("LC_TIME", "English")
point_in_week <- ifelse(weekdays(activity$date, T) %in% c("Sat", "Sun"), "weekend", "weekday")
xyplot(step ~ interval | point_in_week, data = activity2)
xyplot(activity2$step ~ activity2$interval | point_in_week)
xyplot(activity2$step ~ activity2$interval | point_in_week, type = "l")
xyplot(mean(activity2$step) ~ activity2$interval | point_in_week, type = "l")
xyplot(activity2$step ~ activity2$interval | point_in_week, type = "l", panel = function(x,y,...) {mean.values<-mean(activity2$step)})
xyplot(activity2$step ~ activity2$interval | point_in_week, type = "l", panel = function(x,y,...) {mean.values<-mean(y)})
intervals <- sort(unique(activity2$interval))
average_daily_activity_pattern_weekend <- sapply(intervals, function(x) mean(activity2[activity2$interval == x & point_in_week == "weekend", "steps"]))
average_daily_activity_pattern_weekday <- sapply(intervals, function(x) mean(activity2[activity2$interval == x & point_in_week == "weekday", "steps"]))
average_daily_activity_pattern_weekend
average_daily_activity_pattern_weekday
point_in_week
intervals <- sort(unique(activity2$interval))
intervals
head(activity2)
activity2 <- activity
which_have_missing_values <- which(is.na(activity2$steps))
activity2$steps[which_have_missing_values] <- average_daily_activity_pattern[match(activity2[which_have_missing_values, "interval"], intervals)]
total_steps_per_day2 <- tapply(activity2$steps, activity2$date, sum)
hist(total_steps_per_day2, xlab = "Number of steps per day", main = "Total number of steps taken each day")
head(activity2)
head(activity)
activity2 <- activity
which_have_missing_values <- which(is.na(activity2$steps))
activity2$steps[which_have_missing_values] <- round(average_daily_activity_pattern[match(activity2[which_have_missing_values, "interval"], intervals)])
head(activity2)
total_steps_per_day2 <- tapply(activity2$steps, activity2$date, sum)
hist(total_steps_per_day2, xlab = "Number of steps per day", main = "Total number of steps taken each day")
total_steps_per_day2 <- tapply(activity2$steps, activity2$date, sum)
table(activity2$steps)
activity2$date
activity <- read.csv("activity.csv")
activity$datePOSIX <- as.POSIXlt(activity$date)
activity <- read.csv("activity.csv")
activity$datePOSIX <- as.POSIXlt(activity$date)
total_steps_per_day <- tapply(activity$steps, activity$date, sum, na.rm = TRUE)
hist(total_steps_per_day, xlab = "Number of steps per day", main = "Total number of steps taken each day")
mean(total_steps_per_day, na.rm = T)
median(total_steps_per_day, na.rm = T)
intervals <- sort(unique(activity$interval))
average_daily_activity_pattern <- sapply(intervals, function(x) mean(activity[activity$interval == x, "steps"], na.rm = T))
plot(x = intervals, y = average_daily_activity_pattern, type = "l", xlab = "interval", ylab = "average number of steps", main = "Average daily activity pattern")
intervals[which.max(average_daily_activity_pattern)]
sum(is.na(activity$steps))
activity2 <- activity
which_have_missing_values <- which(is.na(activity2$steps))
activity2$steps[which_have_missing_values] <- round(average_daily_activity_pattern[match(activity2[which_have_missing_values, "interval"], intervals)])
total_steps_per_day2 <- tapply(activity2$steps, activity2$date, sum)
hist(total_steps_per_day2, xlab = "Number of steps per day", main = "Total number of steps taken each day")
mean(total_steps_per_day2)
median(total_steps_per_day2)
library(lattice)
Sys.setlocale("LC_TIME", "English")
point_in_week <- ifelse(weekdays(activity2$date, T) %in% c("Sat", "Sun"), "weekend", "weekday")
point_in_week <- ifelse(weekdays(activity2$datePOSIX, T) %in% c("Sat", "Sun"), "weekend", "weekday")
point_in_week
intervals <- sort(unique(activity2$interval))
average_daily_activity_pattern_weekend <- sapply(intervals, function(x) mean(activity2[activity2$interval == x & point_in_week == "weekend", "steps"]))
average_daily_activity_pattern_weekday <- sapply(intervals, function(x) mean(activity2[activity2$interval == x & point_in_week == "weekday", "steps"]))
average_daily_activity_pattern_weekend
c(intervals, intervals)
aggregated_data <- data.frame(interval = c(intervals, intervals), pattern = c(average_daily_activity_pattern_weekend, average_daily_activity_pattern_weekday), week_point = c(rep("weekend", length(intervals)), rep("weekday", length(intervals))))
View(aggregated_data)
xyplot(pattern ~ interval | week_point, data = aggregated_data, type = "l")
xyplot(pattern ~ interval | week_point, data = aggregated_data, type = "l", xlab = "Number of steps")
xyplot(pattern ~ interval | week_point, data = aggregated_data, type = "l", ylab = "Number of steps")
xyplot(pattern ~ interval | week_point, data = aggregated_data, type = "l", ylab = "Number of steps", xlab = "Interval")
xyplot(pattern ~ interval | week_point, data = aggregated_data, type = "l", ylab = "Number of steps", xlab = "Interval",
main = "Average number of steps (weekend vs. weekday)")
